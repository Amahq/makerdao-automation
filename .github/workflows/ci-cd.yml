name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: sarasa1
        run: echo step 1

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      - name: Fix Jest Permissions
        run: chmod +x ./node_modules/.bin/jest

      - name: Debug Entity Files
        run: ls -l src/entities

      # Step 4: Run tests
      - name: Run Tests
        run: npm test

      # Step 5: Build the TypeScript project
      - name: Build Project
        run: npm run build

      # Step 6: Log in to DockerHub (if deploying a Docker image)
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Build and push the Docker image
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

      # Step 8: Deploy to Server (optional, e.g., via SSH)
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            docker stop ${{ secrets.DOCKER_IMAGE_NAME }}-container || true
            docker rm ${{ secrets.DOCKER_IMAGE_NAME }}-container || true
            docker run -d -p 3000:3000 --name ${{ secrets.DOCKER_IMAGE_NAME }}-container ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
